# galileo.py

import coghaz
import socket, time, sys, shlex, string, random

valid_chars = string.hexdigits[:-6].upper()

def print_intro():
    print("===== GALILEO.aic Access Console =====")
    print()
    print("SCiPNet Artificial Intelligence Construct (AIC) Access Console v2.6.1")
    print("Developed by the Foundation Artificial Intelligence Applications Division (AIAD)")
    print()
    print("VERIFYING CACHED CREDENTIALS...")
    print("Welcome, authorized personnel.")
    print()
    print("Your access is being logged by the Records And Information Security Division (RAISA).")
    print("Warning: Under Foundation Legal Codex Section 1.2.7, falsifying access credentials are grounds for immediate termination.")
    print("Warning: Under Foundation Legal Codex Section 1.3.2, misuse of Foundation resources may be grounds for termination.")
    print()
    print("Connecting...")
    print()
    print("Connected to: GALILEO.aic v1.3.5 (gen. II)")
    print("Access terminal hostname:", socket.gethostname())
    print("Current time:", time.asctime())
    print()
    print("Type .help to display help message.")
    print()

def print_reboot():
    print()
    print("Connected to: GALILEO.aic v1.3.5 (gen. II)")
    print("Access terminal hostname:", socket.gethostname())
    print("Current time:", time.asctime())
    print()
    print("Type .help to display help message.")
    print()

def print_help():
    print("Commands for the GALILEO.aic terminal:")
    print(".help: Display this message.")
    print(".quit: Logout and quit the terminal.")
    print(".generate <filename>: Generate a new Perlman-Greene-class cognitohazard.")
    print("  Example: .generate killagent.png")
    print()
    print("Please contact the Artificial Intelligence Applications Division (AIAD) for more information.")
    print()

def print_logout():
    print("Logging out...")
    print("Thank you for using SCiPNet.")

def generate_name():
    return ''.join([random.choice(valid_chars) for _ in range(3)]) + '.' + ''.join([random.choice(valid_chars) for _ in range(2)]) + '.' + ''.join([random.choice(valid_chars) for _ in range(5)]) + '.Perlman-Greene generated by GALILEO.aic'

def main():

    """GALILEO.aic main console."""

    print_intro()

    while True:
        try:
            command = shlex.split(input("GALILEO> "))
            if not command:
                continue

            name = command[0].lower()
            args = command[1:]

            if name in ('.quit', '.exit', '.logout', '.bye'):
                print_logout()
                sys.exit()
            elif name == '.help':
                print_help()
            elif name == '.generate':
                if len(args) != 1:
                    print("Invalid arguments. Command .generate requires a filename.")
                    print()
                    continue

                pgen = coghaz.PerlmanGreeneGenerator(generate_name(), "Courier Prime Code.ttf")
                print("Generating image...")
                pgen.generate(args[0], 512, 724)
                print("Saved to:", args[0])
                print()
            else:
                print("Unrecognized command.")
                print()

        except Exception as e:
            print(f"GALILEO.aic encountered a fatal error: {e}. Rebooting...")
            print_reboot()

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt as e:
         print()
         print_logout()